/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.68
 * Generated at: 2016-05-22 04:44:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.appropriate;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.net.URLDecoder;
import com.xtsoft.poi.CellCol;
import com.xtsoft.poi.ExportEngine;
import java.util.List;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.net.URLDecoder;
import java.text.SimpleDateFormat;
import com.xtsoft.category.model.Category;
import com.xtsoft.category.CategoryServiceUtil;

public final class appropriatedownload_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=gbk");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>报销导出</title>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=gb2312\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");

		Map mp = new HashMap();
		Map params = new HashMap();
		List<HashMap> list = null;
		List<HashMap> roadlist = null;
		List<HashMap> retlist = new ArrayList();
		CellCol[] cells = null;
		String startTime = request.getParameter("startTime");
		String endTime = request.getParameter("endTime");
		String companyId = request.getParameter("companyId");
		//String type = request.getParameter("type");
		String orgIds = request.getParameter("orgIds");
		//String status = request.getParameter("status");
		String organizationId = request.getParameter("organizationId");
		if (startTime != null && !startTime.equals("")) {
			params.put("STARTDAY", startTime);
		}

		if (endTime != null && !endTime.equals("")) {
			params.put("ENDDAY", endTime);
		}
		
		if (companyId != null && !companyId.equals("")) {
			params.put("COMPANYID", companyId);
		}
		//com.xtsoft.kernel.user.model.UserShort currentUser = (com.xtsoft.kernel.user.model.UserShort) request.getSession().getAttribute(com.xtsoft.Constants.CURRENTUSER);
		if (organizationId != null && !organizationId.equals("")) {
			params.put("ORGANIZATIONID", organizationId);
		}
		StringBuffer orgbuffer = new StringBuffer();
		com.xtsoft.kernel.user.model.UserShort currentUser = (com.xtsoft.kernel.user.model.UserShort) request.getSession().getAttribute(com.xtsoft.Constants.CURRENTUSER);
		List<HashMap> listMap = com.xtsoft.kernel.user.UserServiceUtil.getService().getOrgIds(currentUser.getUserId());
		if (listMap != null && listMap.size() > 0) {
			for (int j = 0; j < listMap.size(); j++) {
				if (j == 0) {
					orgbuffer.append(listMap.get(j).get("ORGANIZATIONID"));
				} else {
					orgbuffer.append(",");
					orgbuffer.append(listMap.get(j).get("ORGANIZATIONID"));
				}
			}
		} else {
			orgbuffer.append("0");
		}
		params.put("ORGIDS", orgbuffer.toString());
		List<Map> data = com.xtsoft.appropriate.AppropriateServiceUtil.getService().findAppropriateList(params, 0, 0);
		if (data == null) {
			data = new ArrayList();
		}
		HashMap totalMap = new HashMap();
		totalMap.put("CREATEDATE_SHOWVALUE", "");
		totalMap.put("CREATEOR_SHOWVALUE", "");
		totalMap.put("COMPANY_SHOWVALUE", "");
		totalMap.put("CATEGORY_SHOWVALUE", "");
		totalMap.put("USERNAME", "合计");
		java.math.BigDecimal totalMout = new java.math.BigDecimal(0);
		for (Map p : data) {
			if (String.valueOf(p.get("STATUS")).equals("5")) {
				p.put("STATUS", "已付款");

			} else if (String.valueOf(p.get("STATUS")).equals("4")) {
				p.put("STATUS", "待付款");

			} else if (String.valueOf(p.get("STATUS")).equals("3")) {
				p.put("STATUS", "退回");

			} else if (String.valueOf(p.get("STATUS")).equals("2")) {
				p.put("STATUS", "待审核");

			} else if (String.valueOf(p.get("STATUS")).equals("1")) {
				p.put("STATUS", "已登记");
			} else {
				p.put("STATUS", "");
			}
			totalMout = totalMout.add(new java.math.BigDecimal(Float.parseFloat(String.valueOf(p.get("AMOUNT")))));
		}
		totalMout = totalMout.setScale(2, java.math.RoundingMode.HALF_UP);
		totalMap.put("AMOUNT", totalMout);
		data.add(totalMap);

		cells = new CellCol[5];
		cells[0] = new CellCol();
		cells[0].setColKey("COMPANY_SHOWVALUE");
		cells[0].setColName("所属主体");
		cells[1] = new CellCol();
		cells[1].setColKey("ORGNAME_SHOWVALUE");
		cells[1].setColName("所属合伙人");
		cells[2] = new CellCol();
		cells[2].setColKey("AMOUNT");
		cells[2].setColName("划拨金额");
		cells[3] = new CellCol();
		cells[3].setColKey("APPROPRIATEDATE_SHOWVALUE");
		cells[3].setColName("划拨日期");
		cells[4] = new CellCol();
		cells[4].setColKey("DESCRIPTION");
		cells[4].setColName("备注");

		params.put("DefaultHeaderHeight", "800");
		params.put("DefaultColumnWidth", "20");
		params.put("sheetName", "划拨统计");
		params.put("fileName", "划拨统计");
		params.put("header", "划拨统计" + startTime + "至" + endTime);
		new com.xtsoft.poi.ExportEngine().exportCommData(params, cells, data, response);
		out.clear();
		out = pageContext.pushBody();
	
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
